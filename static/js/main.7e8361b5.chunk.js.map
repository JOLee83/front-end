{"version":3,"sources":["history.js","Auth/Auth.js","Components/Welcome.jsx","Components/CallBack.jsx","Components/AppComponents/AppHeader.jsx","Components/AppComponents/AppHome.jsx","Components/AppComponents/Inventory.jsx","Components/AppComponents/Count.jsx","Components/AppComponents/Settings.jsx","Components/AppComponents/Reports.jsx","Components/AppComponents/Report.jsx","Components/AppComponents/NewReport.jsx","Components/Application.jsx","App.jsx","serviceWorker.js","index.js"],"names":["createHistory","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","authorize","_this","parseHash","err","authResult","accessToken","idToken","setSession","history","replace","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","removeItem","parse","getItem","auth","Welcome","_login","react_default","a","createElement","Fragment","className","onClick","Component","CallBack","state","AppHeader","actionsMenu","_toggleMenu","setState","_logout","NavLink","exact","to","activeClassName","AppHome","reports","reportDate","inventoriesBegin","inventoriesEnd","purchases","sales","users","_this2","axios","get","then","json","data","reverse","colSpan","map","user","index","key","companyName","report","toLocaleDateString","toFixed","parseFloat","Math","round","Inventory","confirmDelete","inventories","deleteId","inventoryId","prevState","deleteInventory","delete","filter","inventory","id","_this3","Link","inventoryDate","inventoryTotal","Count","confirmSubmit","newItemName","newItemPrice","items","total","date","_newItemName","e","target","value","_newItemPrice","addItem","post","itemName","itemCount","itemPrice","concat","deleteItem","item","updateItem","itemId","put","updateName","findIndex","f","toConsumableArray","updateCount","count","updateTotal","updatePrice","isNaN","updateDate","submitCount","props","push","onChange","type","step","onBlur","min","Settings","componentDidMount","updateCompanyName","event","userId","Reports","deleteReport","reportId","String","Report","match","params","NewReport","begin","end","updateBegin","updateEnd","updatePurchases","updateSales","submitReport","Application","name","Router","AppComponents_AppHeader","Switch","Route","path","component","App","render","nextState","test","location","hash","Components_CallBack","Components_Application","assign","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iRAEeA,aCEMC,aAenB,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAG,KAdfC,MAAQ,IAAIA,IAAMC,QAAQ,CACxBC,OAAQ,oBACRC,SAAU,mCACVC,YAAa,iCACbC,aAAc,iBACdC,MAAO,WAUPP,KAAKQ,MAAQR,KAAKQ,MAAMC,KAAKT,MAC7BA,KAAKU,OAASV,KAAKU,OAAOD,KAAKT,MAC/BA,KAAKW,qBAAuBX,KAAKW,qBAAqBF,KAAKT,MAC3DA,KAAKY,gBAAkBZ,KAAKY,gBAAgBH,KAAKT,0DATjDA,KAAKC,MAAMY,4EAaU,IAAAC,EAAAd,KACrBA,KAAKC,MAAMc,UAAU,SAACC,EAAKC,GACrBA,GAAcA,EAAWC,aAAeD,EAAWE,SACrDL,EAAKM,WAAWH,GAChBI,EAAQC,QAAQ,SACPN,IACTK,EAAQC,QAAQ,KAChBC,QAAQC,IAAIR,yCAKPC,GAET,IAAIQ,EAAYC,KAAKC,UAAkC,IAAvBV,EAAWW,WAAoB,IAAIC,MAAOC,WAC1EC,aAAaC,QAAQ,eAAgBf,EAAWC,aAChDa,aAAaC,QAAQ,WAAYf,EAAWE,SAC5CY,aAAaC,QAAQ,aAAcP,GAEnCJ,EAAQC,QAAQ,yCAKhBS,aAAaE,WAAW,gBACxBF,aAAaE,WAAW,YACxBF,aAAaE,WAAW,cAExBZ,EAAQC,QAAQ,+CAKhB,IAAIG,EAAYC,KAAKQ,MAAMH,aAAaI,QAAQ,eAChD,OAAO,IAAIN,MAAOC,UAAYL,WC1D5BW,EAAO,IAAIvC,EAoBFwC,6MAjBbC,OAAS,WACPF,EAAK5B,iFAGL,OACE+B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAgBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAA/C,aACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,wMACAF,EAAAC,EAAAC,cAAA,UAAQG,QAAS5C,KAAKsC,QAAQC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAA3C,qBAXYE,aCWPC,6MAbbC,MAAQ,2EAEN,OACER,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAgBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAA/C,aACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,iCAPaI,qCCEjBT,EAAO,IAAIvC,EAuCFmD,6MApCbD,MAAQ,CACNE,YAAa,YAEfC,YAAc,WACZpC,EAAKqC,SAAS,WACZ,MAA+B,WAA3BrC,EAAKiC,MAAME,YACN,CACLA,YAAa,SAGR,CACLA,YAAa,eAKrBG,QAAU,WACRhB,EAAK1B,kFAGL,OACE6B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAaJ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAlB,aAAoDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcC,QAAS5C,KAAKkD,aAAyC,WAA3BlD,KAAK+C,MAAME,YAA2BV,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAmBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAwBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYC,QAAS5C,KAAKkD,aAAyC,WAA3BlD,KAAK+C,MAAME,YAA2B,OAAS,UAC7VV,EAAAC,EAAAC,cAAA,OAAKE,UAAW3C,KAAK+C,MAAME,aACzBV,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,OAAOX,QAAS5C,KAAKkD,YAAaM,gBAAgB,eAAcjB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAA/F,SAEAJ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASE,GAAG,iBAAiBX,QAAS5C,KAAKkD,YAAaM,gBAAgB,eAAcjB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0BAAnG,cACAJ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASE,GAAG,eAAeX,QAAS5C,KAAKkD,YAAaM,gBAAgB,eAAcjB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAjG,YACAJ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASE,GAAG,gBAAgBX,QAAS5C,KAAKkD,YAAaM,gBAAgB,eAAcjB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAlG,aACAJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS5C,KAAKoD,SAASb,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAA5C,sBA9BcE,aC6FTY,6MA/FbV,MAAQ,CACNW,QAAS,CAAC,CACRC,WAAY,IAAI9B,KAChB+B,iBAAkB,EAClBC,eAAgB,EAChBC,UAAW,EACXC,MAAO,IAETC,MAAO,uFAEW,IAAAC,EAAAjE,KAClBkE,IAAMC,IAAI,sCACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZO,QAASW,EAAKC,KAAKC,cAGzBL,IAAMC,IAAI,oCACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZa,MAAOK,EAAKC,0CAKlB,OACE/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAChBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAASJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAtC,SACAJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBACnBJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAErBJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,KAAZ,qBAGFjC,EAAAC,EAAAC,cAAA,UACGzC,KAAK+C,MAAMiB,MAAMS,IAAI,SAACC,EAAMC,GAC3B,GAAc,IAAVA,EACF,OACEpC,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOH,QAAQ,KAAxB,OAAiCE,EAAKG,YAAtC,SAMT7E,KAAK+C,MAAMW,QAAQe,IAAI,SAACK,EAAQH,GAC/B,GAAc,IAAVA,EACF,OACEpC,EAAAC,EAAAC,cAAA,SAAOmC,IAAKD,GACVpC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAAlC,SACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAS,IAAId,KAAKiD,EAAOnB,YAAYoB,uBAErDxC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAlC,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOlB,iBAAkBoB,QAAQ,KAE5DzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAlC,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOhB,UAAWkB,QAAQ,KAErDzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAlC,WACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOjB,eAAgBmB,QAAQ,KAE1DzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,SAA0DJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBACvEJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,KAAyBsC,WAAWH,EAAOlB,kBAAoBqB,WAAWH,EAAOhB,WAAamB,WAAWH,EAAOjB,iBAAiBmB,QAAQ,KAE3IzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,UACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOf,MAAOiB,QAAQ,KAEjDzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,SAA0DJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBACvEJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAA0B,IAAjBmC,EAAOf,MAAcmB,KAAKC,OAAQF,WAAWH,EAAOlB,kBAAoBqB,WAAWH,EAAOhB,WAAamB,WAAWH,EAAOjB,iBAAmBoB,WAAWH,EAAOf,OAAS,KAAQ,EAAtM,SAMVxB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,iBAvFJ3B,qBC+GPuC,6MA3GbrC,MAAQ,CACNsC,eAAe,EACfC,YAAa,GACbC,SAAU,QAWZF,cAAgB,SAACG,GACf1E,EAAKqC,SAAS,SAAAsC,GAAS,MAAK,CAC1BJ,eAAgBI,EAAUJ,cAC1BE,SAAUC,QAGdE,gBAAkB,WAChBxB,IAAMyB,OAAO,0CAA4C7E,EAAKiC,MAAMwC,UACjEnB,KAAK,SAAAC,GACJvD,EAAKqC,SAAS,CACZmC,YAAaxE,EAAKiC,MAAMuC,YAAYf,UAAUqB,OAAO,SAAAC,GAAS,OAAIA,EAAUC,KAAOhF,EAAKiC,MAAMwC,eAE/FnB,KAAK,WAAQtD,EAAKuE,sGArBL,IAAApB,EAAAjE,KAClBkE,IAAMC,IAAI,0CACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZmC,YAAajB,EAAKC,KAAKC,YAEzBhD,QAAQC,IAAIyC,EAAKlB,MAAMuC,gDAkBpB,IAAAS,EAAA/F,KACP,OACEuC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAW3C,KAAK+C,MAAMsC,cAAgB,UAAY,aACrD9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS5C,KAAK0F,iBAAtB,OACAnD,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAc,QAA1C,SAIN9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAChBJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,OAAK,EAACC,GAAG,QAAOhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAnC,UACNJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAASJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0BAAtC,cACAJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAErBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAG,cAAahB,EAAAC,EAAAC,cAAA,6BAExBF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACGzC,KAAK+C,MAAMuC,YAAYb,IAAI,SAACoB,EAAWlB,GACtC,OAAIA,EAAQ,IAAM,EAEdpC,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOhC,UAAU,OACxBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACX,IAAId,KAAKgE,EAAUI,eAAelB,sBAErCxC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,IACIkD,EAAUK,eAAelB,QAAQ,IAErCzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAcQ,EAAUC,MAClDvD,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAOnBJ,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOhC,UAAU,QACxBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACX,IAAId,KAAKgE,EAAUI,eAAelB,sBAErCxC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,IACIkD,EAAUK,eAAelB,QAAQ,IAErCzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAcQ,EAAUC,MAClDvD,EAAAC,EAAAC,cAAA,KAAGE,UAAU,2BAQ3BJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,kBAlGJ3B,qBCuQTsD,6MAxQbpD,MAAQ,CACNqD,eAAe,EACff,eAAe,EACfgB,YAAa,GACbC,aAAc,KACdC,MAAO,GACPC,MAAO,EACPC,KAAM,KACNlB,SAAU,QAUZmB,aAAe,SAACC,GACd7F,EAAKqC,SAAS,CACZkD,YAAaM,EAAEC,OAAOC,WAG1BC,cAAgB,SAACH,GACf7F,EAAKqC,SAAS,CACZmD,aAAcK,EAAEC,OAAOC,WAG3BE,QAAU,SAACJ,GACTzC,IAAM8C,KAAK,mCAAoC,CAAEC,SAAUnG,EAAKiC,MAAMsD,YAAaa,UAAW,EAAGC,UAAWrG,EAAKiC,MAAMuD,eACpHlC,KAAK,SAAAC,GACJvD,EAAKqC,SAAS,CACZoD,MAAOzF,EAAKiC,MAAMwD,MAAMa,OAAO/C,EAAKC,aAI5C+C,WAAa,WACXnD,IAAMyB,OAAO,oCAAsC7E,EAAKiC,MAAMwC,UAC3DnB,KAAK,WACJtD,EAAKqC,SAAS,CACZoD,MAAOzF,EAAKiC,MAAMwD,MAAMX,OAAO,SAAA0B,GAAI,OAAIA,EAAKxB,KAAOhF,EAAKiC,MAAMwC,eAE/DnB,KAAK,WACNtD,EAAKuE,cAAc,WAGzBkC,WAAa,SAACC,EAAQP,EAAUE,GAC9BjD,IAAMuD,IAAI,oCAAsCD,EAAQ,CAAE1B,GAAI0B,EAAQP,SAAUA,EAAUE,UAAWA,OAEvGO,WAAa,SAACf,EAAGa,GACf,IAAM7C,EAAQ7D,EAAKiC,MAAMwD,MAAMoB,UAAU,SAAAC,GAAC,OAAIA,EAAE9B,KAAO0B,IACjDF,EAAOxG,EAAKiC,MAAMwD,MAAM5B,GACxB4B,EAAKzG,OAAA+H,EAAA,EAAA/H,CAAOgB,EAAKiC,MAAMwD,OAC7Be,EAAKL,SAAWN,EAAEC,OAAOC,MACzBN,EAAM5B,GAAS2C,EACfxG,EAAKqC,SAAS,CAAEoD,aAElBuB,YAAc,SAACnB,EAAGa,GAChB,IAAM7C,EAAQ7D,EAAKiC,MAAMwD,MAAMoB,UAAU,SAAAC,GAAC,OAAIA,EAAE9B,KAAO0B,IACjDF,EAAOxG,EAAKiC,MAAMwD,MAAM5B,GACxB4B,EAAKzG,OAAA+H,EAAA,EAAA/H,CAAOgB,EAAKiC,MAAMwD,OAC7Be,EAAKS,MAAQ9C,WAAW0B,EAAEC,OAAOC,MAAO,IACxCN,EAAM5B,GAAS2C,EACfxG,EAAKqC,SAAS,CAAEoD,SAAS,kBAAMzF,EAAKkH,mBAEtCC,YAAc,SAACtB,EAAGa,GAChB,IAAM7C,EAAQ7D,EAAKiC,MAAMwD,MAAMoB,UAAU,SAAAC,GAAC,OAAIA,EAAE9B,KAAO0B,IACjDF,EAAOxG,EAAKiC,MAAMwD,MAAM5B,GACxB4B,EAAKzG,OAAA+H,EAAA,EAAA/H,CAAOgB,EAAKiC,MAAMwD,OAC7Be,EAAKH,UAAYlC,WAAW0B,EAAEC,OAAOC,MAAO,IAC5CN,EAAM5B,GAAS2C,EACfxG,EAAKqC,SAAS,CAAEoD,SAAS,kBAAMzF,EAAKkH,mBAGtCA,YAAc,WACZ,IAAIxB,EAAQ,EACZ1F,EAAKiC,MAAMwD,MAAM9B,IAAI,SAAA6C,GACdY,MAAMZ,EAAKS,QAAWG,MAAMZ,EAAKH,aACpCX,GAAiBc,EAAKS,MAAQT,EAAKH,aAGvCrG,EAAKqC,SAAS,CACZqD,MAAOA,OAGX2B,WAAa,SAAAxB,GACX7F,EAAKqC,SAAS,CAAEsD,KAAME,EAAEC,OAAOC,WAEjCuB,YAAc,WACZlE,IAAM8C,KAAK,yCAA0C,CAAEd,eAAgBpF,EAAKiC,MAAMyD,MAAOP,cAAenF,EAAKiC,MAAM0D,OAChHrC,KAAK,WACJtD,EAAKuH,MAAMhH,QAAQiH,KAAK,uBAG9BlC,cAAgB,WACdtF,EAAKqC,SAAS,SAAAsC,GAAS,MAAK,CAC1BW,eAAgBX,EAAUW,oBAG9Bf,cAAgB,SAACmC,GACf1G,EAAKqC,SAAS,SAAAsC,GAAS,MAAK,CAC1BJ,eAAgBI,EAAUJ,cAC1BE,SAAUiC,yFA5FM,IAAAvD,EAAAjE,KAClBkE,IAAMC,IAAI,oCACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZoD,MAAOlC,EAAKC,0CA2FX,IAAAyB,EAAA/F,KACP,OACEuC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW3C,KAAK+C,MAAMqD,cAAgB,UAAY,aACrD7D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS5C,KAAKoI,aAAtB,OACA7F,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKK,kBAA5B,SAIN7D,EAAAC,EAAAC,cAAA,OAAKE,UAAW3C,KAAK+C,MAAMsC,cAAgB,UAAY,aACrD9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKsB,eAA5B,OACA9E,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAc,QAA1C,SAIN9C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAChBJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,OAAK,EAACC,GAAG,QAAOhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAnC,UACNJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,OAAK,EAACC,GAAG,kBAAiBhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0BAA7C,eACNJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAASJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAtC,WAEFJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQG,QAAS5C,KAAK+G,SAAtB,QAEFxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,SAAO8F,SAAUvI,KAAK0G,eACtBnE,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO+F,KAAK,SAASC,KAAK,OAAOF,SAAUvI,KAAK8G,gBAChDvE,EAAAC,EAAAC,cAAA,qBAINF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,kBAEAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACGzC,KAAK+C,MAAMwD,MAAM9B,IAAI,SAAC6C,EAAM3C,GAC3B,OAAIA,EAAQ,IAAM,EAEdpC,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOhC,UAAU,OACxBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,SACEoE,MAAOS,EAAKL,SACZsB,SAAU,SAAC5B,GAAD,OAAOZ,EAAK2B,WAAWf,EAAGW,EAAKxB,KACzC4C,OAAQ,kBAAM3C,EAAKwB,WAAWD,EAAKxB,GAAIwB,EAAKL,SAAUK,EAAKH,eAI/D5E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,SACEoE,MAAOS,EAAKS,MACZY,IAAI,IACJJ,SAAU,SAAC5B,GAAD,OAAOZ,EAAK+B,YAAYnB,EAAGW,EAAKxB,KAC1C0C,KAAK,YAETjG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,SACE+F,KAAK,SACL3B,MAAOS,EAAKH,UACZsB,KAAK,MACLF,SAAU,SAAC5B,GAAD,OAAOZ,EAAKkC,YAAYtB,EAAGW,EAAKxB,KAC1C4C,OAAQ,kBAAM3C,EAAKwB,WAAWD,EAAKxB,GAAIwB,EAAKL,SAAUK,EAAKH,eAS/D5E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAciC,EAAKxB,MAC7CvD,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAOnBJ,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOhC,UAAU,QACxBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,SACEoE,MAAOS,EAAKL,SACZsB,SAAU,SAAC5B,GAAD,OAAOZ,EAAK2B,WAAWf,EAAGW,EAAKxB,KACzC4C,OAAQ,kBAAM3C,EAAKwB,WAAWD,EAAKxB,GAAIwB,EAAKL,SAAUK,EAAKH,eAI/D5E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,SACEoE,MAAOS,EAAKS,MACZY,IAAI,IACJJ,SAAU,SAAC5B,GAAD,OAAOZ,EAAK+B,YAAYnB,EAAGW,EAAKxB,KAC1C0C,KAAK,YAETjG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,SACE+F,KAAK,SACL3B,MAAOS,EAAKH,UACZsB,KAAK,MACLF,SAAU,SAAC5B,GAAD,OAAOZ,EAAKkC,YAAYtB,EAAGW,EAAKxB,KAC1C4C,OAAQ,kBAAM3C,EAAKwB,WAAWD,EAAKxB,GAAIwB,EAAKL,SAAUK,EAAKH,eAQ/D5E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAciC,EAAKxB,MAC7CvD,EAAAC,EAAAC,cAAA,KAAGE,UAAU,2BAQ3BJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,KAAZ,SACAjC,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,KAAZ,IAAkBxE,KAAK+C,MAAMyD,MAAMxB,QAAQ,KAE7CzC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,KACVjC,EAAAC,EAAAC,cAAA,SACE+F,KAAK,OACLD,SAAU,SAAC5B,GAAQZ,EAAKoC,WAAWxB,OAEvCpE,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,KACVjC,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKK,kBAA5B,sBA/PIvD,aCuDL+F,6MApDb7F,MAAQ,CACNiB,MAAO,MAET6E,kBAAoB,WAClB3E,IAAMC,IAAI,oCACPC,KAAK,SAAAC,GACJvD,EAAKqC,SAAS,CACZa,MAAOK,EAAKC,YAIpBwE,kBAAoB,SAACC,EAAOC,EAAQnE,GAClCX,IAAMuD,IAAI,oCAAsCuB,EAAQ,CAAElD,GAAIkD,EAAQnE,YAAaA,OAErF6C,WAAa,SAACf,EAAGqC,GACf,IAAMrE,EAAQ7D,EAAKiC,MAAMiB,MAAM2D,UAAU,SAAAC,GAAC,OAAIA,EAAE9B,KAAOkD,IACjDtE,EAAO5D,EAAKiC,MAAMiB,MAAMW,GACxBX,EAAKlE,OAAA+H,EAAA,EAAA/H,CAAOgB,EAAKiC,MAAMiB,OAC7BU,EAAKG,YAAc8B,EAAEC,OAAOC,MAC5B7C,EAAMW,GAASD,EACf5D,EAAKqC,SAAS,CAAEa,mFAET,IAAAC,EAAAjE,KACP,OACEuC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAChBJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,OAAK,EAACC,GAAG,QAAOhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAnC,UACNJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAASJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAtC,aACAJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAEhB3C,KAAK+C,MAAMiB,MAAMS,IAAI,SAACC,EAAMC,GAC3B,GAAc,IAAVA,EACF,OACEpC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SACEoE,MAAOnC,EAAKG,YACZ0D,SAAU,SAAC5B,GAAD,OAAO1C,EAAKyD,WAAWf,EAAGjC,EAAKoB,OAC3CvD,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAQG,QAAS,SAAC+D,GAAD,OAAO1C,EAAK6E,kBAAkBnC,EAAGjC,EAAKoB,GAAIpB,EAAKG,eAAhE,aAfZ,aAzBiBhC,aC+GRoG,6MAhHblG,MAAQ,CACNsC,eAAe,EACf3B,QAAS,GACT6B,SAAU,QAYZ2D,aAAe,WACbhF,IAAMyB,OAAO,sCAAwC7E,EAAKiC,MAAMwC,UAC7DnB,KAAK,SAAAC,GACJvD,EAAKqC,SAAS,CACZO,QAAS5C,EAAKiC,MAAMW,QAAQkC,OAAO,SAAAd,GAAM,OAAIA,EAAOgB,KAAOhF,EAAKiC,MAAMwC,eAEvEnB,KAAK,WACNtD,EAAKuE,cAAc,WAGzBA,cAAgB,SAAC8D,GACfrI,EAAKqC,SAAS,SAAAsC,GAAS,MAAK,CAC1BJ,eAAgBI,EAAUJ,cAC1BE,SAAU4D,yFAvBM,IAAAlF,EAAAjE,KAClBkE,IAAMC,IAAI,sCACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZO,QAASW,EAAKC,KAAKC,+CAuBlB,IAAAwB,EAAA/F,KACP,OACEuC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAW3C,KAAK+C,MAAMsC,cAAgB,UAAY,aACrD9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS5C,KAAKkJ,cAAtB,OACA3G,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAc,QAA1C,SAIN9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAChBJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,OAAK,EAACC,GAAG,QAAOhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAnC,UACNJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAASJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAtC,YACAJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAErBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAG,kBAAiBhB,EAAAC,EAAAC,cAAA,8BAE5BF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACGzC,KAAK+C,MAAMW,QAAQe,IAAI,SAACK,EAAQH,GAC/B,OAAIA,EAAQ,IAAM,EAEdpC,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOhC,UAAU,OACxBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAE,eAAA6D,OAAiBtC,EAAOgB,KAAO,IAAIjE,KAAKiD,EAAOnB,YAAYoB,uBAErExC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAE,eAAA6D,OAAiBtC,EAAOgB,KAC7BsD,OAAOlE,KAAKC,OAAQF,WAAWH,EAAOlB,kBAAoBqB,WAAWH,EAAOhB,WAAamB,WAAWH,EAAOjB,iBAAmBoB,WAAWH,EAAOf,OAAS,MAD5J,MAIFxB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAcP,EAAOgB,MAC/CvD,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAOnBJ,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOhC,UAAU,QACxBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAE,eAAA6D,OAAiBtC,EAAOgB,KAAO,IAAIjE,KAAKiD,EAAOnB,YAAYoB,uBAErExC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAE,eAAA6D,OAAiBtC,EAAOgB,KAC7BZ,KAAKC,OAAQF,WAAWH,EAAOlB,kBAAoBqB,WAAWH,EAAOhB,WAAamB,WAAWH,EAAOjB,iBAAmBoB,WAAWH,EAAOf,OAAS,KADrJ,MAIFxB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmD,EAAKV,cAAcP,EAAOgB,MAC/CvD,EAAAC,EAAAC,cAAA,KAAGE,UAAU,2BAQ3BJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,kBAxGR3B,aC4FPwG,6MA1FbtG,MAAQ,CACNW,QAAS,GACTM,MAAO,uFAEW,IAAAC,EAAAjE,KAClBkE,IAAMC,IAAI,sCACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZO,QAASW,EAAKC,SAGpBJ,IAAMC,IAAI,oCACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZa,MAAOK,EAAKC,0CAKX,IAAAyB,EAAA/F,KACP,OACEuC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAChBJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,OAAK,EAACC,GAAG,QAAOhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAnC,UACNJ,EAAAC,EAAAC,cAAA,YAAOF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAG,gBAAehB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAArC,aACPJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAASJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAtC,YAEFJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,KAAZ,qBAGFjC,EAAAC,EAAAC,cAAA,UACGzC,KAAK+C,MAAMiB,MAAMS,IAAI,SAACC,EAAMC,GAC3B,GAAc,IAAVA,EACF,OACEpC,EAAAC,EAAAC,cAAA,MAAImC,IAAKD,EAAOH,QAAQ,KAAxB,OAAiCE,EAAKG,YAAtC,SAMT7E,KAAK+C,MAAMW,QAAQe,IAAI,SAACK,EAAQH,GAC/B,GAAIyE,OAAOtE,EAAOgB,MAAQC,EAAKsC,MAAMiB,MAAMC,OAAOzD,GAChD,OACEvD,EAAAC,EAAAC,cAAA,SAAOmC,IAAKD,GACVpC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAAlC,SACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAS,IAAId,KAAKiD,EAAOnB,YAAYoB,uBAErDxC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAlC,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOlB,iBAAkBoB,QAAQ,KAE5DzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAlC,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOhB,UAAWkB,QAAQ,KAErDzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAlC,WACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOjB,eAAgBmB,QAAQ,KAE1DzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,SAA0DJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBACvEJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,KAAyBsC,WAAWH,EAAOlB,kBAAoBqB,WAAWH,EAAOhB,WAAamB,WAAWH,EAAOjB,iBAAiBmB,QAAQ,KAE3IzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,UACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmC,EAAOf,MAAOiB,QAAQ,KAEjDzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,SAA0DJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBACvEJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASuC,KAAKC,OAAQF,WAAWH,EAAOlB,kBAAoBqB,WAAWH,EAAOhB,WAAamB,WAAWH,EAAOjB,iBAAmBoB,WAAWH,EAAOf,OAAS,KAAzK,SAMVxB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,iBAlFL3B,aC6JN2G,6MA7JbzG,MAAQ,CACNqD,eAAe,EACfd,YAAa,GACbmE,MAAO,EACPC,IAAK,EACL3F,MAAO,KACPD,UAAW,EACX2C,MAAM,IAAI5E,MAAOkD,wBAUnB4E,YAAc,SAAAhD,GACZ7F,EAAKqC,SAAS,CAAEsG,MAAO9C,EAAEC,OAAOC,WAElC+C,UAAY,SAAAjD,GACV7F,EAAKqC,SAAS,CAAEuG,IAAK/C,EAAEC,OAAOC,WAEhCgD,gBAAkB,SAAAlD,GAChB7F,EAAKqC,SAAS,CAAEW,UAAW6C,EAAEC,OAAOC,WAEtCiD,YAAc,SAAAnD,GACZ7F,EAAKqC,SAAS,CAAEY,MAAO4C,EAAEC,OAAOC,WAElCsB,WAAa,SAAAxB,GACXpF,QAAQC,IAAImF,EAAEC,OAAOC,OACrB/F,EAAKqC,SAAS,CAAEsD,KAAM,IAAI5E,KAAJ,GAAAuF,OAAYT,EAAEC,OAAOC,MAArB,cAAuC9B,0BAE/DgF,aAAe,SAAApD,GACbzC,IAAM8C,KAAK,qCAAsC,CAAEpD,iBAAkB9C,EAAKiC,MAAM0G,MAAO5F,eAAgB/C,EAAKiC,MAAM2G,IAAK3F,MAAOjD,EAAKiC,MAAMgB,MAAOD,UAAWhD,EAAKiC,MAAMe,UAAWH,WAAY7C,EAAKiC,MAAM0D,OACrMrC,KAAK,WACJtD,EAAKuH,MAAMhH,QAAQiH,KAAK,qBAG9BlC,cAAgB,WACdtF,EAAKqC,SAAS,SAAAsC,GAAS,MAAK,CAC1BW,eAAgBX,EAAUW,qGAhCV,IAAAnC,EAAAjE,KAClBkE,IAAMC,IAAI,0CACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZmC,YAAajB,EAAKC,KAAKC,+CA+BtB,IAAAwB,EAAA/F,KACP,OACEuC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAW3C,KAAK+C,MAAMqD,cAAgB,UAAY,aACrD7D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS5C,KAAK+J,cAAtB,OACAxH,EAAAC,EAAAC,cAAA,UAAQG,QAAS,WAAQmD,EAAKK,kBAA9B,SAIN7D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAChBJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,OAAK,EAACC,GAAG,QAAOhB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAnC,UACNJ,EAAAC,EAAAC,cAAA,YAAOF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMzC,GAAG,gBAAehB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAArC,aACPJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAASJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAtC,YAGFJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ8F,SAAU,SAAC5B,GAAD,OAAOZ,EAAK4D,YAAYhD,KACxCpE,EAAAC,EAAAC,cAAA,UAAQoE,MAAO,GAAf,oBACC7G,KAAK+C,MAAMuC,YAAYb,IAAI,SAACoB,EAAWlB,GACtC,OACEpC,EAAAC,EAAAC,cAAA,UAAQmC,IAAKD,EAAOkC,MAAOhB,EAAUK,gBAAiB,IAAIrE,KAAKgE,EAAUI,eAAelB,yBAI9FxC,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,UAAQ8F,SAAU,SAAC5B,GAAD,OAAOZ,EAAK6D,UAAUjD,KACtCpE,EAAAC,EAAAC,cAAA,UAAQoE,MAAO,GAAf,iBACC7G,KAAK+C,MAAMuC,YAAYb,IAAI,SAACoB,EAAWlB,GACtC,OACEpC,EAAAC,EAAAC,cAAA,UAAQmC,IAAKD,EAAOkC,MAAOhB,EAAUK,gBAAiB,IAAIrE,KAAKgE,EAAUI,eAAelB,yBAI9FxC,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,SAAO+F,KAAK,SAASG,IAAI,IAAIJ,SAAU,SAAC5B,GAAD,OAAOZ,EAAK8D,gBAAgBlD,MACnEpE,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,SAAO+F,KAAK,SAASG,IAAI,IAAIJ,SAAU,SAAC5B,GAAD,OAAOZ,EAAK+D,YAAYnD,MAC/DpE,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,SAAO8F,SAAU,SAAC5B,GAAQZ,EAAKoC,WAAWxB,IAAM6B,KAAK,SACrDjG,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,WAAQmD,EAAKK,kBAA9B,mBAGJ7D,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,KAAZ,sBAMJjC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBAAlC,SACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAS3C,KAAK+C,MAAM0D,OAEpClE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAlC,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAwBsC,WAAWjF,KAAK+C,MAAM0G,OAAOzE,QAAQ,KAE/DzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAlC,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAwBsC,WAAWjF,KAAK+C,MAAMe,WAAWkB,QAAQ,KAEnEzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAlC,WACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAwBsC,WAAWjF,KAAK+C,MAAM2G,KAAK1E,QAAQ,KAE7DzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,SAA0DJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBACvEJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,KAAyBsC,WAAWjF,KAAK+C,MAAM0G,OAASxE,WAAWjF,KAAK+C,MAAMe,WAAamB,WAAWjF,KAAK+C,MAAM2G,MAAM1E,QAAQ,KAEjIzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,UACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAwBsC,WAAWjF,KAAK+C,MAAMgB,OAAOiB,QAAQ,KAE/DzC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAlC,SAA0DJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBACvEJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASuC,KAAKC,OAAQF,WAAWjF,KAAK+C,MAAM0G,OAASxE,WAAWjF,KAAK+C,MAAMe,WAAamB,WAAWjF,KAAK+C,MAAM2G,MAAQzE,WAAWjF,KAAK+C,MAAMgB,OAAS,KAAnK,OAGJxB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+B,QAAQ,kBApJJ3B,aCuDTmH,6MAzCbjH,MAAQ,CACNiB,MAAO,uFAEW,IAAAC,EAAAjE,KAClBkE,IAAMC,IAAI,oCACPC,KAAK,SAAAC,GACJJ,EAAKd,SAAS,CACZa,MAAOK,EAAKC,SAGfF,KAAKpE,KAAK+C,MAAMiB,MAAMS,IAAI,SAACC,EAAMC,GAClB,IAAVA,GACFV,EAAKd,SAAS,CACZ8G,KAAMvF,EAAKG,kDAOnB,OACEtC,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAQ7I,QAASA,GACfkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC0H,EAAD,MACA5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAO/G,OAAK,EAACgH,KAAK,OAAOC,UAAW9G,IAGpClB,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAWnF,IACxC7C,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAO/G,OAAK,EAACgH,KAAK,aAAaC,UAAWpE,IAC1C5D,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWtB,IACtC1G,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAWlB,IACzC9G,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAWf,IACxCjH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAW3B,cAlCzB/F,aCRpBT,EAAO,IAAIvC,EAmCF2K,mLAxBX,OACEjI,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAQ7I,QAASA,GACfkB,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,IAAIhH,OAAK,EAACiH,UAAWlI,IACjCE,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,YAAYhH,OAAK,EAACmH,OAAQ,SAACpC,GAbpB,IAACqC,EAelB,OAfkBA,EAcGrC,EAb/B9G,QAAQC,IAAI,CAAEkJ,cACV,8BAA8BC,KAAKD,EAAUE,SAASC,OACxDzI,EAAKzB,uBAYU4B,EAAAC,EAAAC,cAACqI,EAAazC,MAEvB9F,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,KAAK,OAAOG,OAAQ,SAACpC,GAC1B,OAAIjG,EAAKxB,kBACA2B,EAAAC,EAAAC,cAACsI,EAADjL,OAAAkL,OAAA,CAAa5I,KAAMA,GAAUiG,IAEjCjG,EAAKxB,uBAAV,GACES,EAAQiH,KAAK,KACN/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,mBAhBHG,aCNEoI,QACW,cAA7BC,OAAON,SAASO,UAEe,UAA7BD,OAAON,SAASO,UAEhBD,OAAON,SAASO,SAAS7B,MACvB,2DCZN8B,IAASX,OAAOlI,EAAAC,EAAAC,cAAC4I,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtH,KAAK,SAAAuH,GACjCA,EAAaC","file":"static/js/main.7e8361b5.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()","import auth0 from 'auth0-js';\r\nimport history from '../history';\r\n\r\n\r\nexport default class Auth {\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'jolee83.auth0.com',\r\n    clientID: 'F5er3xmY0b652w46wkV7Hbbtbqrr54tJ',\r\n    redirectUri: 'http://localhost:3000/callback',\r\n    responseType: 'token id_token',\r\n    scope: 'openid'\r\n  });\r\n\r\n  login() {\r\n    this.auth0.authorize();\r\n  }\r\n\r\n\r\n\r\n  constructor() {\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n  }\r\n\r\n\r\n  handleAuthentication() {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        this.setSession(authResult);\r\n        history.replace('/app');\r\n      } else if (err) {\r\n        history.replace('/');\r\n        console.log(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  setSession(authResult) {\r\n    // Set the time that the Access Token will expire at\r\n    let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\r\n    localStorage.setItem('access_token', authResult.accessToken);\r\n    localStorage.setItem('id_token', authResult.idToken);\r\n    localStorage.setItem('expires_at', expiresAt);\r\n    // navigate to the home route\r\n    history.replace('/app');\r\n  }\r\n\r\n  logout() {\r\n    // Clear Access Token and ID Token from local storage\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('id_token');\r\n    localStorage.removeItem('expires_at');\r\n    // navigate to the home route\r\n    history.replace('/');\r\n  }\r\n  isAuthenticated() {\r\n    // Check whether the current time is past the \r\n    // Access Token's expiry time\r\n    let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Auth from '../Auth/Auth.js';\r\n\r\nconst auth = new Auth();\r\n\r\nclass Welcome extends Component {\r\n  _login = () => {\r\n    auth.login()\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"landing-title\"><i className=\"fas fa-running\" /> Quicklee</header>\r\n        <div className=\"welcome-div\">\r\n          <h1>Welcome to Quicklee</h1>\r\n          <p>Inventory Solutions for Small Businesses. Quicklee is an easy to use web app, so you can track your received orders and inventory the way you want to from your phone, tablet, or computer.</p>\r\n          <button onClick={this._login}><i className=\"fas fa-sign-in-alt\" /> Sign In</button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\n\r\nclass CallBack extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"landing-title\"><i className=\"fas fa-running\" /> Quicklee</header>\r\n        <div className=\"welcome-div\">\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CallBack;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Auth from '../../Auth/Auth.js';\r\n\r\nconst auth = new Auth();\r\n\r\nclass AppHeader extends Component {\r\n  state = {\r\n    actionsMenu: 'hidden'\r\n  }\r\n  _toggleMenu = () => {\r\n    this.setState(() => {\r\n      if (this.state.actionsMenu === 'hidden') {\r\n        return {\r\n          actionsMenu: 'shown'\r\n        }\r\n      } else {\r\n        return {\r\n          actionsMenu: 'hidden'\r\n        }\r\n      }\r\n    })\r\n  }\r\n  _logout = () => {\r\n    auth.logout()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"header-div\">\r\n        <header className=\"app-header\"><div><i className=\"fas fa-running\" /> Quicklee</div><div className=\"mobile-menu\" onClick={this._toggleMenu}>{this.state.actionsMenu === 'hidden' ? <i className=\"fas fa-bars\" /> : <i className=\"fas fa-times\" />}</div><div className=\"full-menu\" onClick={this._toggleMenu}>{this.state.actionsMenu === 'hidden' ? 'Menu' : 'Close'}</div></header>\r\n        <nav className={this.state.actionsMenu}>\r\n          <NavLink exact to=\"/app\" onClick={this._toggleMenu} activeClassName=\"active-link\"><i className=\"fas fa-home\" /> Home</NavLink>\r\n          {/* <NavLink to=\"/app/orders\" onClick={this._toggleMenu}><i className=\"fas fa-box\" /> Orders</NavLink> */}\r\n          <NavLink to=\"/app/inventory\" onClick={this._toggleMenu} activeClassName=\"active-link\"><i className=\"fas fa-clipboard-list\" /> Inventory</NavLink>\r\n          <NavLink to=\"/app/reports\" onClick={this._toggleMenu} activeClassName=\"active-link\"><i className=\"fas fa-file-alt\" /> Reports</NavLink>\r\n          <NavLink to=\"/app/settings\" onClick={this._toggleMenu} activeClassName=\"active-link\"><i className=\"fas fa-cog\" /> Settings</NavLink>\r\n          <button onClick={this._logout}><i className=\"fas fa-sign-out-alt\" /> Sign Out</button>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nclass AppHome extends Component {\r\n  state = {\r\n    reports: [{\r\n      reportDate: new Date(),\r\n      inventoriesBegin: 0.00,\r\n      inventoriesEnd: 0.00,\r\n      purchases: 0.00,\r\n      sales: 0.00\r\n    }],\r\n    users: []\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://localhost:5001/api/reports\")\r\n      .then(json => {\r\n        this.setState({\r\n          reports: json.data.reverse()\r\n        })\r\n      })\r\n    axios.get(\"https://localhost:5001/api/users\")\r\n      .then(json => {\r\n        this.setState({\r\n          users: json.data\r\n        })\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <header className=\"breadcrumbs\">\r\n          <span className=\"active\"><i className=\"fas fa-home\" /> Home</span>\r\n          <span><i className=\"fas fa-circle\" /></span>\r\n          <span><i className=\"fas fa-circle\" /></span>\r\n        </header>\r\n        <table className=\"home-table\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"2\">Latest Inventory</th>\r\n            </tr>\r\n\r\n            <tr>\r\n              {this.state.users.map((user, index) => {\r\n                if (index === 0) {\r\n                  return (\r\n                    <th key={index} colSpan=\"2\">For {user.companyName} </th>\r\n                  )\r\n                }\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          {this.state.reports.map((report, index) => {\r\n            if (index === 0) {\r\n              return (\r\n                <tbody key={index}>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-calendar-alt\" /> Date</td>\r\n                    <td className=\"right\">{new Date(report.reportDate).toLocaleDateString()}</td>\r\n                  </tr>\r\n                  <tr className=\"even\">\r\n                    <td className=\"left\"><i className=\"fas fa-plus\" /> Beginning</td>\r\n                    <td className=\"right\">${(report.inventoriesBegin).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-plus\" /> Purchases</td>\r\n                    <td className=\"right\">${(report.purchases).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"even\">\r\n                    <td className=\"left\"><i className=\"fas fa-minus\" /> Ending</td>\r\n                    <td className=\"right\">${(report.inventoriesEnd).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-equals\" /> COGS <i className=\"fas fa-dollar-sign\" /></td>\r\n                    <td className=\"right\">${(parseFloat(report.inventoriesBegin) + parseFloat(report.purchases) - parseFloat(report.inventoriesEnd)).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"even\">\r\n                    <td className=\"left\"><i className=\"fas fa-divide\" /> Sales</td>\r\n                    <td className=\"right\">${(report.sales).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-equals\" /> COGS <i className=\"fas fa-percent\" /></td>\r\n                    <td className=\"right\">{report.sales !== 0 ? Math.round(((parseFloat(report.inventoriesBegin) + parseFloat(report.purchases) - parseFloat(report.inventoriesEnd)) / parseFloat(report.sales) * 100)) : 0}%</td>\r\n                  </tr>\r\n                </tbody>\r\n              )\r\n            }\r\n          })}\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"2\"></th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHome;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Inventory extends Component {\r\n  state = {\r\n    confirmDelete: false,\r\n    inventories: [],\r\n    deleteId: null\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://localhost:5001/api/inventories\")\r\n      .then(json => {\r\n        this.setState({\r\n          inventories: json.data.reverse()\r\n        })\r\n        console.log(this.state.inventories)\r\n      })\r\n  }\r\n  confirmDelete = (inventoryId) => {\r\n    this.setState(prevState => ({\r\n      confirmDelete: !prevState.confirmDelete,\r\n      deleteId: inventoryId\r\n    }))\r\n  }\r\n  deleteInventory = () => {\r\n    axios.delete(\"https://localhost:5001/api/inventories/\" + this.state.deleteId)\r\n      .then(json => {\r\n        this.setState({\r\n          inventories: this.state.inventories.reverse().filter(inventory => inventory.id !== this.state.deleteId)\r\n        })\r\n      }).then(() => { this.confirmDelete() })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={this.state.confirmDelete ? \"confirm\" : \"unconfirm\"}>\r\n          <div className=\"confirm-box\">\r\n            <p>Delete Count?</p>\r\n            <div>\r\n              <button onClick={this.deleteInventory}>Yes</button>\r\n              <button onClick={() => this.confirmDelete(null)}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"inv-div\">\r\n          <header className=\"breadcrumbs\">\r\n            <span><Link exact to=\"/app\"><i className=\"fas fa-home\" /> Home</Link></span>\r\n            <span className=\"active\"><i className=\"fas fa-clipboard-list\" /> Inventory</span>\r\n            <span><i className=\"fas fa-circle\" /></span>\r\n          </header>\r\n          <div className=\"button-div\">\r\n            <Link to=\"/app/count\"><button>New Count</button></Link>\r\n          </div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.inventories.map((inventory, index) => {\r\n                if (index % 2 === 0) {\r\n                  return (\r\n                    <tr key={index} className=\"odd\">\r\n                      <td className=\"data-one\">\r\n                        {new Date(inventory.inventoryDate).toLocaleDateString()}\r\n                      </td>\r\n                      <td className=\"data-two\">\r\n                        ${inventory.inventoryTotal.toFixed(2)}\r\n                      </td>\r\n                      <td className=\"data-three\">\r\n                        <button onClick={() => this.confirmDelete(inventory.id)}>\r\n                          <i className=\"fas fa-trash-alt\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <tr key={index} className=\"even\">\r\n                      <td className=\"data-one\">\r\n                        {new Date(inventory.inventoryDate).toLocaleDateString()}\r\n                      </td>\r\n                      <td className=\"data-two\">\r\n                        ${inventory.inventoryTotal.toFixed(2)}\r\n                      </td>\r\n                      <td className=\"data-three\">\r\n                        <button onClick={() => this.confirmDelete(inventory.id)}>\r\n                          <i className=\"fas fa-trash-alt\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }\r\n              })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <th colSpan=\"3\"></th>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Count extends Component {\r\n  state = {\r\n    confirmSubmit: false,\r\n    confirmDelete: false,\r\n    newItemName: \"\",\r\n    newItemPrice: null,\r\n    items: [],\r\n    total: 0,\r\n    date: null,\r\n    deleteId: null\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://localhost:5001/api/items\")\r\n      .then(json => {\r\n        this.setState({\r\n          items: json.data\r\n        })\r\n      })\r\n  }\r\n  _newItemName = (e) => {\r\n    this.setState({\r\n      newItemName: e.target.value\r\n    })\r\n  }\r\n  _newItemPrice = (e) => {\r\n    this.setState({\r\n      newItemPrice: e.target.value\r\n    })\r\n  }\r\n  addItem = (e) => {\r\n    axios.post(\"https://localhost:5001/api/items\", { itemName: this.state.newItemName, itemCount: 0, itemPrice: this.state.newItemPrice })\r\n      .then(json => {\r\n        this.setState({\r\n          items: this.state.items.concat(json.data)\r\n        })\r\n      })\r\n  }\r\n  deleteItem = () => {\r\n    axios.delete(\"https://localhost:5001/api/items/\" + this.state.deleteId)\r\n      .then(() => {\r\n        this.setState({\r\n          items: this.state.items.filter(item => item.id !== this.state.deleteId)\r\n        })\r\n      }).then(() => {\r\n        this.confirmDelete(null)\r\n      })\r\n  }\r\n  updateItem = (itemId, itemName, itemPrice) => {\r\n    axios.put(\"https://localhost:5001/api/items/\" + itemId, { id: itemId, itemName: itemName, itemPrice: itemPrice })\r\n  }\r\n  updateName = (e, itemId) => {\r\n    const index = this.state.items.findIndex(f => f.id === itemId)\r\n    const item = this.state.items[index]\r\n    const items = [...this.state.items]\r\n    item.itemName = e.target.value\r\n    items[index] = item\r\n    this.setState({ items })\r\n  }\r\n  updateCount = (e, itemId) => {\r\n    const index = this.state.items.findIndex(f => f.id === itemId)\r\n    const item = this.state.items[index]\r\n    const items = [...this.state.items]\r\n    item.count = parseFloat(e.target.value, 10)\r\n    items[index] = item\r\n    this.setState({ items }, () => this.updateTotal())\r\n  }\r\n  updatePrice = (e, itemId) => {\r\n    const index = this.state.items.findIndex(f => f.id === itemId)\r\n    const item = this.state.items[index]\r\n    const items = [...this.state.items]\r\n    item.itemPrice = parseFloat(e.target.value, 10)\r\n    items[index] = item\r\n    this.setState({ items }, () => this.updateTotal())\r\n  }\r\n\r\n  updateTotal = () => {\r\n    let total = 0;\r\n    this.state.items.map(item => {\r\n      if (!isNaN(item.count) && !isNaN(item.itemPrice)) {\r\n        total = total + (item.count * item.itemPrice)\r\n      }\r\n    })\r\n    this.setState({\r\n      total: total\r\n    })\r\n  }\r\n  updateDate = e => {\r\n    this.setState({ date: e.target.value })\r\n  }\r\n  submitCount = () => {\r\n    axios.post(\"https://localhost:5001/api/inventories\", { inventoryTotal: this.state.total, inventoryDate: this.state.date })\r\n      .then(() => {\r\n        this.props.history.push(\"/app/inventory\")\r\n      })\r\n  }\r\n  confirmSubmit = () => {\r\n    this.setState(prevState => ({\r\n      confirmSubmit: !prevState.confirmSubmit\r\n    }))\r\n  }\r\n  confirmDelete = (itemId) => {\r\n    this.setState(prevState => ({\r\n      confirmDelete: !prevState.confirmDelete,\r\n      deleteId: itemId\r\n    }))\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"count-div\">\r\n        <div className={this.state.confirmSubmit ? \"confirm\" : \"unconfirm\"}>\r\n          <div className=\"confirm-box\">\r\n            <p>Submit Count?</p>\r\n            <div>\r\n              <button onClick={this.submitCount}>Yes</button>\r\n              <button onClick={() => this.confirmSubmit()}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={this.state.confirmDelete ? \"confirm\" : \"unconfirm\"}>\r\n          <div className=\"confirm-box\">\r\n            <p>Delete Item?</p>\r\n            <div>\r\n              <button onClick={() => this.deleteItem()}>Yes</button>\r\n              <button onClick={() => this.confirmDelete(null)}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <header className=\"breadcrumbs\">\r\n          <span><Link exact to=\"/app\"><i className=\"fas fa-home\" /> Home</Link></span>\r\n          <span><Link exact to=\"/app/inventory\"><i className=\"fas fa-clipboard-list\" /> Inventory</Link></span>\r\n          <span className=\"active\"><i className=\"fas fa-list-ol\" /> Count</span>\r\n        </header>\r\n        <form>\r\n          <div className=\"form-div\">\r\n            <h2>New Item</h2>\r\n            <button onClick={this.addItem}>Add</button>\r\n          </div>\r\n          <div className=\"form-div\">\r\n            <div>\r\n\r\n              <input onChange={this._newItemName} />\r\n              <h4>Name</h4>\r\n            </div>\r\n            <div>\r\n              <input type=\"number\" step=\"0.01\" onChange={this._newItemPrice} />\r\n              <h4>Cost</h4>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Count</th>\r\n              <th>Cost</th>\r\n              {/* <th>Update</th> */}\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.items.map((item, index) => {\r\n              if (index % 2 === 0) {\r\n                return (\r\n                  <tr key={index} className=\"odd\">\r\n                    <td className=\"data-one\">\r\n                      <input\r\n                        value={item.itemName}\r\n                        onChange={(e) => this.updateName(e, item.id)}\r\n                        onBlur={() => this.updateItem(item.id, item.itemName, item.itemPrice)}\r\n\r\n                      />\r\n                    </td>\r\n                    <td className=\"data-two\">\r\n                      <input\r\n                        value={item.count}\r\n                        min=\"0\"\r\n                        onChange={(e) => this.updateCount(e, item.id)}\r\n                        type=\"number\" />\r\n                    </td>\r\n                    <td className=\"data-three\">\r\n                      <input\r\n                        type=\"number\"\r\n                        value={item.itemPrice}\r\n                        step=\"any\"\r\n                        onChange={(e) => this.updatePrice(e, item.id)}\r\n                        onBlur={() => this.updateItem(item.id, item.itemName, item.itemPrice)}\r\n\r\n                      />\r\n                    </td>\r\n                    {/* <td className=\"data-four\">\r\n                      <button onClick={() => this.updateItem(item.id, item.itemName, item.itemPrice)} >\r\n                        <i className=\"far fa-arrow-alt-circle-up\" />\r\n                      </button>\r\n                    </td> */}\r\n                    <td className=\"data-four\">\r\n                      <button onClick={() => this.confirmDelete(item.id)}>\r\n                        <i className=\"fas fa-trash-alt\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              } else {\r\n                return (\r\n                  <tr key={index} className=\"even\">\r\n                    <td className=\"data-one\">\r\n                      <input\r\n                        value={item.itemName}\r\n                        onChange={(e) => this.updateName(e, item.id)}\r\n                        onBlur={() => this.updateItem(item.id, item.itemName, item.itemPrice)}\r\n\r\n                      />\r\n                    </td>\r\n                    <td className=\"data-two\">\r\n                      <input\r\n                        value={item.count}\r\n                        min=\"0\"\r\n                        onChange={(e) => this.updateCount(e, item.id)}\r\n                        type=\"number\" />\r\n                    </td>\r\n                    <td className=\"data-three\">\r\n                      <input\r\n                        type=\"number\"\r\n                        value={item.itemPrice}\r\n                        step=\"any\"\r\n                        onChange={(e) => this.updatePrice(e, item.id)}\r\n                        onBlur={() => this.updateItem(item.id, item.itemName, item.itemPrice)}\r\n                      />\r\n                    </td>\r\n                    {/* <td className=\"data-four\">\r\n                      <button onClick={() => this.updateItem(item.id, item.itemName, item.itemPrice)} >\r\n                        <i className=\"far fa-arrow-alt-circle-up\" />\r\n                      </button>\r\n                    </td> */}\r\n                    <td className=\"data-four\">\r\n                      <button onClick={() => this.confirmDelete(item.id)}>\r\n                        <i className=\"fas fa-trash-alt\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"2\">Total</th>\r\n              <th colSpan=\"2\">${this.state.total.toFixed(2)}</th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"2\">\r\n                <input\r\n                  type=\"date\"\r\n                  onChange={(e) => { this.updateDate(e) }} />\r\n              </th>\r\n              <th colSpan=\"2\">\r\n                <button onClick={() => this.confirmSubmit()}>Submit</button>\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Count;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    users: []\r\n  }\r\n  componentDidMount = () => {\r\n    axios.get(\"https://localhost:5001/api/users\")\r\n      .then(json => {\r\n        this.setState({\r\n          users: json.data\r\n        })\r\n      })\r\n  };\r\n  updateCompanyName = (event, userId, companyName) => {\r\n    axios.put(\"https://localhost:5001/api/users/\" + userId, { id: userId, companyName: companyName })\r\n  }\r\n  updateName = (e, userId) => {\r\n    const index = this.state.users.findIndex(f => f.id === userId)\r\n    const user = this.state.users[index]\r\n    const users = [...this.state.users]\r\n    user.companyName = e.target.value\r\n    users[index] = user\r\n    this.setState({ users })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"settings-div\">\r\n        <header className=\"breadcrumbs\">\r\n          <span><Link exact to=\"/app\"><i className=\"fas fa-home\" /> Home</Link></span>\r\n          <span className=\"active\"><i className=\"fas fa-cog\" /> Settings</span>\r\n          <span><i className=\"fas fa-circle\" /></span>\r\n        </header>\r\n            {this.state.users.map((user, index) => {\r\n              if (index === 0) {\r\n                return (\r\n                  <div >\r\n\r\n                  <input \r\n                    value={user.companyName}\r\n                    onChange={(e) => this.updateName(e, user.id)} />\r\n                  <h4>Company Name</h4>\r\n                  <button onClick={(e) => this.updateCompanyName(e, user.id, user.companyName)}>Update</button>\r\n                  </div>\r\n                  )\r\n              }\r\n            })}\r\n\\\r\n\r\n         \r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass Reports extends Component {\r\n  state = {\r\n    confirmDelete: false,\r\n    reports: [],\r\n    deleteId: null\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://localhost:5001/api/reports\")\r\n      .then(json => {\r\n        this.setState({\r\n          reports: json.data.reverse()\r\n\r\n        })\r\n\r\n      })\r\n  }\r\n  deleteReport = () => {\r\n    axios.delete(\"https://localhost:5001/api/reports/\" + this.state.deleteId)\r\n      .then(json => {\r\n        this.setState({\r\n          reports: this.state.reports.filter(report => report.id !== this.state.deleteId)\r\n        })\r\n      }).then(() => {\r\n        this.confirmDelete(null)\r\n      })\r\n  }\r\n  confirmDelete = (reportId) => {\r\n    this.setState(prevState => ({\r\n      confirmDelete: !prevState.confirmDelete,\r\n      deleteId: reportId\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={this.state.confirmDelete ? \"confirm\" : \"unconfirm\"}>\r\n          <div className=\"confirm-box\">\r\n            <p>Delete Report?</p>\r\n            <div>\r\n              <button onClick={this.deleteReport}>Yes</button>\r\n              <button onClick={() => this.confirmDelete(null)}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"reports-div\">\r\n          <header className=\"breadcrumbs\">\r\n            <span><Link exact to=\"/app\"><i className=\"fas fa-home\" /> Home</Link></span>\r\n            <span className=\"active\"><i className=\"fas fa-file-alt\" /> Reports</span>\r\n            <span><i className=\"fas fa-circle\" /></span>\r\n          </header>\r\n          <div className=\"button-div\">\r\n            <Link to=\"/app/newreport\"><button>New Report</button></Link>\r\n          </div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>COGS</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.reports.map((report, index) => {\r\n                if (index % 2 === 0) {\r\n                  return (\r\n                    <tr key={index} className=\"odd\">\r\n                      <td className=\"data-one\">\r\n                        <Link to={`/app/report/${report.id}`}>{new Date(report.reportDate).toLocaleDateString()}</Link>\r\n                      </td>\r\n                      <td className=\"data-two\">\r\n                        <Link to={`/app/report/${report.id}`}>\r\n                          {String(Math.round(((parseFloat(report.inventoriesBegin) + parseFloat(report.purchases) - parseFloat(report.inventoriesEnd)) / parseFloat(report.sales) * 100)))}%\r\n                      </Link>\r\n                      </td>\r\n                      <td className=\"data-three\">\r\n                        <button onClick={() => this.confirmDelete(report.id)}>\r\n                          <i className=\"fas fa-trash-alt\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <tr key={index} className=\"even\">\r\n                      <td className=\"data-one\">\r\n                        <Link to={`/app/report/${report.id}`}>{new Date(report.reportDate).toLocaleDateString()}</Link>\r\n                      </td>\r\n                      <td className=\"data-two\">\r\n                        <Link to={`/app/report/${report.id}`}>\r\n                          {Math.round(((parseFloat(report.inventoriesBegin) + parseFloat(report.purchases) - parseFloat(report.inventoriesEnd)) / parseFloat(report.sales) * 100))}%\r\n                          </Link>\r\n                      </td>\r\n                      <td className=\"data-three\">\r\n                        <button onClick={() => this.confirmDelete(report.id)}>\r\n                          <i className=\"fas fa-trash-alt\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }\r\n              })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr><th colSpan=\"3\"></th></tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reports\r\n  ;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Report extends Component {\r\n  state = {\r\n    reports: [],\r\n    users: []\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://localhost:5001/api/reports\")\r\n      .then(json => {\r\n        this.setState({\r\n          reports: json.data\r\n        })\r\n      })\r\n    axios.get(\"https://localhost:5001/api/users\")\r\n      .then(json => {\r\n        this.setState({\r\n          users: json.data\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"report-div\">\r\n        <header className=\"breadcrumbs\">\r\n          <span><Link exact to=\"/app\"><i className=\"fas fa-home\" /> Home</Link></span>\r\n          <span ><Link to=\"/app/reports\"><i className=\"fas fa-file-alt\" /> Reports</Link></span>\r\n          <span className=\"active\"><i className=\"fas fa-file-alt\" /> Report</span>\r\n        </header>\r\n        <table className=\"home-table\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"2\">Inventory Report</th>\r\n            </tr>\r\n\r\n            <tr>\r\n              {this.state.users.map((user, index) => {\r\n                if (index === 0) {\r\n                  return (\r\n                    <th key={index} colSpan=\"2\">For {user.companyName} </th>\r\n                  )\r\n                }\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          {this.state.reports.map((report, index) => {\r\n            if (String(report.id) === this.props.match.params.id) {\r\n              return (\r\n                <tbody key={index}>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-calendar-alt\" /> Date</td>\r\n                    <td className=\"right\">{new Date(report.reportDate).toLocaleDateString()}</td>\r\n                  </tr>\r\n                  <tr className=\"even\">\r\n                    <td className=\"left\"><i className=\"fas fa-plus\" /> Beginning</td>\r\n                    <td className=\"right\">${(report.inventoriesBegin).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-plus\" /> Purchases</td>\r\n                    <td className=\"right\">${(report.purchases).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"even\">\r\n                    <td className=\"left\"><i className=\"fas fa-minus\" /> Ending</td>\r\n                    <td className=\"right\">${(report.inventoriesEnd).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-equals\" /> COGS <i className=\"fas fa-dollar-sign\" /></td>\r\n                    <td className=\"right\">${(parseFloat(report.inventoriesBegin) + parseFloat(report.purchases) - parseFloat(report.inventoriesEnd)).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"even\">\r\n                    <td className=\"left\"><i className=\"fas fa-divide\" /> Sales</td>\r\n                    <td className=\"right\">${(report.sales).toFixed(2)}</td>\r\n                  </tr>\r\n                  <tr className=\"odd\">\r\n                    <td className=\"left\"><i className=\"fas fa-equals\" /> COGS <i className=\"fas fa-percent\" /></td>\r\n                    <td className=\"right\">{Math.round(((parseFloat(report.inventoriesBegin) + parseFloat(report.purchases) - parseFloat(report.inventoriesEnd)) / parseFloat(report.sales) * 100))}%</td>\r\n                  </tr>\r\n                </tbody>\r\n              )\r\n            }\r\n          })}\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"2\"></th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Report;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NewReport extends Component {\r\n  state = {\r\n    confirmSubmit: false,\r\n    inventories: [],\r\n    begin: 0,\r\n    end: 0,\r\n    sales: .00001,\r\n    purchases: 0,\r\n    date: new Date().toLocaleDateString()\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://localhost:5001/api/inventories\")\r\n      .then(json => {\r\n        this.setState({\r\n          inventories: json.data.reverse()\r\n        })\r\n      })\r\n  }\r\n  updateBegin = e => {\r\n    this.setState({ begin: e.target.value })\r\n  }\r\n  updateEnd = e => {\r\n    this.setState({ end: e.target.value })\r\n  }\r\n  updatePurchases = e => {\r\n    this.setState({ purchases: e.target.value })\r\n  }\r\n  updateSales = e => {\r\n    this.setState({ sales: e.target.value })\r\n  }\r\n  updateDate = e => {\r\n    console.log(e.target.value)\r\n    this.setState({ date: new Date(`${e.target.value}T00:00:00`).toLocaleDateString() })\r\n  }\r\n  submitReport = e => {\r\n    axios.post(\"https://localhost:5001/api/reports\", { inventoriesBegin: this.state.begin, inventoriesEnd: this.state.end, sales: this.state.sales, purchases: this.state.purchases, reportDate: this.state.date })\r\n      .then(() => {\r\n        this.props.history.push(\"/app/reports\")\r\n      })\r\n  }\r\n  confirmSubmit = () => {\r\n    this.setState(prevState => ({\r\n      confirmSubmit: !prevState.confirmSubmit\r\n    }))\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={this.state.confirmSubmit ? \"confirm\" : \"unconfirm\"}>\r\n          <div className=\"confirm-box\">\r\n            <p>Submit Report?</p>\r\n            <div>\r\n              <button onClick={this.submitReport}>Yes</button>\r\n              <button onClick={() => { this.confirmSubmit() }}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"details-div\">\r\n          <header className=\"breadcrumbs\">\r\n            <span><Link exact to=\"/app\"><i className=\"fas fa-home\" /> Home</Link></span>\r\n            <span ><Link to=\"/app/reports\"><i className=\"fas fa-file-alt\" /> Reports</Link></span>\r\n            <span className=\"active\"><i className=\"fas fa-file-alt\" /> Report</span>\r\n          </header>\r\n\r\n          <form>\r\n            <div>\r\n              <select onChange={(e) => this.updateBegin(e)}>\r\n                <option value={0}>Choose Beginning</option>\r\n                {this.state.inventories.map((inventory, index) => {\r\n                  return (\r\n                    <option key={index} value={inventory.inventoryTotal}>{new Date(inventory.inventoryDate).toLocaleDateString()}</option>\r\n                  )\r\n                })}\r\n              </select >\r\n              <h4>Beginning Inventory</h4>\r\n            </div>\r\n            <div>\r\n\r\n              <select onChange={(e) => this.updateEnd(e)}>\r\n                <option value={0}>Choose Ending</option>\r\n                {this.state.inventories.map((inventory, index) => {\r\n                  return (\r\n                    <option key={index} value={inventory.inventoryTotal}>{new Date(inventory.inventoryDate).toLocaleDateString()}</option>\r\n                  )\r\n                })}\r\n              </select>\r\n              <h4>Ending Inventory</h4>\r\n            </div>\r\n            <div>\r\n\r\n              <input type=\"number\" min=\"0\" onChange={(e) => this.updatePurchases(e)} />\r\n              <h4 >Purchases($)</h4>\r\n            </div>\r\n            <div>\r\n\r\n              <input type=\"number\" min=\"0\" onChange={(e) => this.updateSales(e)} />\r\n              <h4>Sales($)</h4>\r\n            </div>\r\n            <div>\r\n\r\n              <input onChange={(e) => { this.updateDate(e) }} type=\"date\" />\r\n              <h4>Report Date</h4>\r\n            </div>\r\n            <div className=\"button-div\">\r\n              <button onClick={() => { this.confirmSubmit() }}>Submit Report</button>\r\n            </div>\r\n          </form>\r\n          <table className=\"home-table\">\r\n            <thead>\r\n              <tr>\r\n                <th colSpan=\"2\">Inventory Report</th>\r\n              </tr>\r\n              {/* <tr>\r\n                <th colSpan=\"2\">For \"Company Name\"</th>\r\n              </tr> */}\r\n            </thead>\r\n            <tbody>\r\n              <tr className=\"odd\">\r\n                <td className=\"left\"><i className=\"fas fa-calendar-alt\" /> Date</td>\r\n                <td className=\"right\">{this.state.date}</td>\r\n              </tr>\r\n              <tr className=\"even\">\r\n                <td className=\"left\"><i className=\"fas fa-plus\" /> Beginning</td>\r\n                <td className=\"right\">${parseFloat(this.state.begin).toFixed(2)}</td>\r\n              </tr>\r\n              <tr className=\"odd\">\r\n                <td className=\"left\"><i className=\"fas fa-plus\" /> Purchases</td>\r\n                <td className=\"right\">${parseFloat(this.state.purchases).toFixed(2)}</td>\r\n              </tr>\r\n              <tr className=\"even\">\r\n                <td className=\"left\"><i className=\"fas fa-minus\" /> Ending</td>\r\n                <td className=\"right\">${parseFloat(this.state.end).toFixed(2)}</td>\r\n              </tr>\r\n              <tr className=\"odd\">\r\n                <td className=\"left\"><i className=\"fas fa-equals\" /> COGS <i className=\"fas fa-dollar-sign\" /></td>\r\n                <td className=\"right\">${(parseFloat(this.state.begin) + parseFloat(this.state.purchases) - parseFloat(this.state.end)).toFixed(2)}</td>\r\n              </tr>\r\n              <tr className=\"even\">\r\n                <td className=\"left\"><i className=\"fas fa-divide\" /> Sales</td>\r\n                <td className=\"right\">${parseFloat(this.state.sales).toFixed(2)}</td>\r\n              </tr>\r\n              <tr className=\"odd\">\r\n                <td className=\"left\"><i className=\"fas fa-equals\" /> COGS <i className=\"fas fa-percent\" /></td>\r\n                <td className=\"right\">{Math.round(((parseFloat(this.state.begin) + parseFloat(this.state.purchases) - parseFloat(this.state.end)) / parseFloat(this.state.sales) * 100))}%</td>\r\n              </tr>\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <th colSpan=\"2\"></th>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewReport;","import React, { Component } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport AppHeader from './AppComponents/AppHeader.jsx'\r\nimport AppHome from './AppComponents/AppHome.jsx'\r\n// import Orders from './AppComponents/Orders.jsx'\r\n// import InputOrder from './AppComponents/InputOrder.jsx'\r\nimport Inventory from './AppComponents/Inventory.jsx'\r\nimport Count from './AppComponents/Count.jsx'\r\nimport Settings from './AppComponents/Settings.jsx'\r\nimport Reports from './AppComponents/Reports.jsx'\r\nimport Report from './AppComponents/Report.jsx'\r\nimport NewReport from './AppComponents/NewReport.jsx'\r\n\r\nimport history from '../history';\r\n\r\nclass Application extends Component {\r\n  state = {\r\n    users: [],\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://localhost:5001/api/users\")\r\n      .then(json => {\r\n        this.setState({\r\n          users: json.data\r\n        })\r\n      })\r\n      .then(this.state.users.map((user, index) => {\r\n        if (index === 0) {\r\n          this.setState({\r\n            name: user.companyName\r\n          })\r\n        }\r\n      }))\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <>\r\n          <AppHeader />\r\n          <Switch>\r\n            <Route exact path=\"/app\" component={AppHome} />\r\n            {/* <Route path=\"/app/orders\" component={Orders} />\r\n            <Route path=\"/app/inputorder\" component={InputOrder} /> */}\r\n            <Route path=\"/app/inventory\" component={Inventory} />\r\n            <Route exact path=\"/app/count\" component={Count} />\r\n            <Route path=\"/app/reports\" component={Reports} />\r\n            <Route path=\"/app/report/:id\" component={Report} />\r\n            <Route path=\"/app/newreport\" component={NewReport} />\r\n            <Route path=\"/app/settings\" component={Settings} />\r\n          </Switch>\r\n        </>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Application;","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom'\nimport Welcome from './Components/Welcome.jsx'\nimport CallBack from './Components/CallBack.jsx'\nimport Application from './Components/Application.jsx'\n\nimport Auth from './Auth/Auth.js';\nimport history from './history'\n\nconst auth = new Auth();\n\nconst handleAuthentication = (nextState, replace) => {\n  console.log({ nextState })\n  if (/access_token|id_token|error/.test(nextState.location.hash)) {\n    auth.handleAuthentication();\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/\" exact component={Welcome} />\n          <Route path=\"/callback\" exact render={(props) => {\n            handleAuthentication(props);\n            return <CallBack {...props} />\n          }} />\n          <Route path=\"/app\" render={(props) => {\n            if (auth.isAuthenticated()) {\n              return <Application auth={auth} {...props} />\n            }\n            if (!auth.isAuthenticated()) {\n              history.push('/')\n              return <></>\n            }\n          }\n          } />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}